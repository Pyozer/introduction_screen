# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  # Required to ignore auto-generated code as it will always hang using the 
  # analyzer. DCDG UML generation tool requires this line as it does use the 
  # analyzer as a dependency.
  # per https://github.com/dart-lang/sdk/issues/25551
  exclude: 
    - "**/*.g.dart"
    - "**/*.freezed.dart"
  # Using json_serializable with freezed causes annotation warnings.
  # Issue: https://github.com/rrousselGit/freezed/issues/488
  errors:
    invalid_annotation_target: ignore

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    prefer_single_quotes: true # Unless being escaped inside string
    always_use_package_imports: true # For normal dart files, excluding libs
    cancel_subscriptions: true # To avoid memory leaks
    no_logic_in_create_state: true # Separate business logic from state mgmt
    valid_regexps: true # RegEx validator


# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
